buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("com.bmuschko:gradle-nexus-plugin:2.3.1")
    }
}

plugins {
    id 'java'
    id("maven")
    id("signing")
}
apply plugin: "com.bmuschko.nexus"
java {
    modularity.inferModulePath = true
}
compileJava {
    //will work with Java 1.8, but this is required as there is a module-info.java
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

}
group 'net.mahdilamb'
version '0.1.312-SNAPSHOT'
ext.moduleName = 'net.mahdilamb.dataviz'
repositories {
    mavenCentral()
}
dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

    implementation 'net.mahdilamb:colormap:0.9.6'
    implementation 'net.mahdilamb:dataframe:0.2.3'
}

test {
    useJUnitPlatform()
}

task swingTest(type: JavaExec, dependsOn: ['testClasses']) {
    classpath sourceSets.test.runtimeClasspath
    main = "net.mahdilamb.dataviz.tests.SwingTest"
}

task lruPlaygroundTest(type: JavaExec, dependsOn: ['testClasses']) {
    classpath sourceSets.test.runtimeClasspath
    main = "net.mahdilamb.dataviz.lru.LRUPlayground"
}
task scatterTest(type: JavaExec, dependsOn: ['testClasses']) {
    classpath sourceSets.test.runtimeClasspath
    main = "net.mahdilamb.dataviz.demos.ScatterDemos"
}
javadoc {
    options.tags = ["apiNote", "implNote", "implSpec"]
}
modifyPom {

    project {
        name = "charts"
        description = "Charts"
        url = "https://github.com/mahdilamb/dataviz"
        inceptionYear = "2020"

        licenses {
            license {
                name = 'The Apache License, Version 2.0'
                url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
            }
        }
        developers {
            developer {
                id = "mahdilamb"
                name = "Mahdi Lamb"
                email = "mahdilamb[at]gmail[dot]com"
            }
        }
        scm {
            url = "https://github.com/mahdilamb/dataviz"
            connection = "scm:https://mahdilamb@github.com/mahdilamb/dataviz.git"
            developerConnection = "scm:git://github.com/mahdilamb/dataviz.git"
        }
    }

}

extraArchive {
    sources = true
    tests = true
    javadoc = true
}

nexus {
    sign = !version.endsWith("SNAPSHOT")
    repositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
    snapshotRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
}
